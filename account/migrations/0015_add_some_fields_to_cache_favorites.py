# Generated by Django 3.2 on 2022-01-05 10:47

from django.db import migrations, models
from django.db.utils import OperationalError, ProgrammingError

from api_property.common.common import getProp

try:
    from ofirio_common.prop_fin_model import FinanceModel
except ImportError:
    pass

def fill_in_mortgage(apps, schema_editor):
    try:
        favorite_prop = apps.get_model('account', 'FavoriteProperty')
        for prop in favorite_prop.objects.all():
            prop_db = getProp(prop.prop_id)
            models_kwargs = {}
            if not prop.estimated_mortgage:
                if price := prop.price:
                    models_kwargs['price'] = price
                if tax := prop.prop_taxes:
                    models_kwargs['property_taxes'] = tax
                fin_model = FinanceModel(**models_kwargs)
                prop.estimated_mortgage = fin_model.month_loan_payments
            if not prop.apr_rate and prop_db:
                prop.apr_rate = prop_db['data']['apr_rate']
            if not prop.estimated_rent and prop_db:
                prop.estimated_rent = prop_db['data']['predicted_rent']
            prop.save()
            
    except (LookupError, OperationalError, ProgrammingError, NameError):
        # An app may be deleted, so fail is ok. It just means we don't need to copy data
        print('Something went wrong, but it\'s probably ok  ')
        return


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0014_alter_favoriteproperty_predicted_rent'),
    ]

    operations = [
        migrations.RenameField(
            model_name='favoriteproperty',
            old_name='predicted_rent',
            new_name='estimated_rent'
        ),
        migrations.AddField(
            model_name='favoriteproperty',
            name='apr_rate',
            field=models.FloatField(null=True, blank=True),
        ),

        migrations.AddField(
            model_name='favoriteproperty',
            name='estimated_mortgage',
            field=models.FloatField(null=True, blank=True),
        ),
        migrations.AddField(
            model_name='favoriteproperty',
            name='prop_class',
            field=models.CharField(default='invest', max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='favoriteproperty',
            name='prop_taxes',
            field=models.FloatField(null=True, blank=True),
        ),
        migrations.RunPython(fill_in_mortgage),
    ]
